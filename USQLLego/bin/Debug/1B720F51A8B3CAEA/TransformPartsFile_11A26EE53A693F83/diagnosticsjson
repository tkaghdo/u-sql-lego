{"Error":[{"errorId":"E_STORE_USER_FILENOTFOUND","severity":"Error","component":"STORE","source":"User","message":"File not found or access denied: wasb:\/\/lego@tambykaghdostorage1\/input\/parts.csv.","description":"Unable to obtain information about this file.","resolution":"Ensure the file with exact casing exists (paths are case-sensitive) and the account has read permission to the file.","details":"at token '@input_file_location', line 13\r\nnear the ###:\r\n**************\r\ning = \"\/output_data\/parts_output.csv\";\r\n\r\n@parts_input =\r\n    EXTRACT PART_NUMBER string,\r\n            PART_NAME string,\r\n            CATEGORY_ID int\r\n    FROM  ### @input_file_location\r\n    USING Extractors.Csv(skipFirstNRows:1);\r\n\r\n@parts_output = \r\n    SELECT PART_NUMBER,\r\n           PART_NAME.ToUpper() AS  PART_NAME,\r\n ","internalDiagnostics":"ScopeCompiler.CompilationException: E_STORE_USER_FILENOTFOUND: File not found or access denied: wasb:\/\/lego@tambykaghdostorage1\/input\/parts.csv.\nDescription:\nUnable to obtain information about this file.\nResolution:\nEnsure the file with exact casing exists (paths are case-sensitive) and the account has read permission to the file.\r\n ---> System.Exception: U-SQL Local Run only supports local path: wasb:\/\/lego@tambykaghdostorage1\/input\/parts.csv\r\n   at ScopeCompiler.Dependencies.Kona.Local.USqlLocalRunPathResolver.AssertSupportedAbsolutePath(String path)\r\n   at ScopeCompiler.PathResolver.AssertValidScriptPath(String path)\r\n   at ScopeCompiler.PathResolver.GetFullPathInner(String pathFromScript)\r\n   at ScopeCompiler.FrontEnd.PathExpander.ResolvePath(String path, PathResolver pathResolver)\r\n   at ScopeCompiler.FrontEnd.PathManager.Expand(PathType type, String originalPath, PathResolver pathResolver, PathExpander expander)\r\n   at ScopeCompiler.FrontEnd.PathManager.ExpandInput(String path, Token anchorToken, Script script, PathResolver pathResolver, PathExpander expander)\r\n   --- End of inner exception stack trace ---\r\n   at ScopeCompiler.FrontEnd.PathManager.ExpandInput(String path, Token anchorToken, Script script, PathResolver pathResolver, PathExpander expander)\r\n   at ScopeCompiler.FrontEnd.InputOutputPass.ProcessUnstructuredFileList(List`1 fileList, Script input, Boolean hasPartitinedBy)\r\n   at ScopeCompiler.FrontEnd.InputOutputPass.OnExtractFromClause(Script input, ExtractFromClause e)\r\n   at ScopeCompiler.FrontEnd.SyntaxVisitor`1.Visit(T input, SyntaxNode e)\r\n   at ScopeCompiler.TreeVisitor`2.Visit(P input, IEnumerable`1 nodes)\r\n   at ScopeCompiler.FrontEnd.SqlInputOutputPass.ProcessExtractQuery(IMultiColumnConstraint constraint, Script input, ExtractQuery e, OrderedDictionary columns, List`1 fileList)\r\n   at ScopeCompiler.FrontEnd.SqlInputOutputPass.OnExtractQuery(Script input, ExtractQuery extractQuery)\r\n   at ScopeCompiler.FrontEnd.SyntaxVisitor`1.Visit(T input, SyntaxNode e)\r\n   at ScopeCompiler.TreeVisitor`2.Visit(P input, IEnumerable`1 nodes)\r\n   at ScopeCompiler.FrontEnd.SyntaxVisitor`1.Visit(T input, SyntaxNode e)\r\n   at ScopeCompiler.TreeVisitor`2.Visit(P input, IEnumerable`1 nodes)\r\n   at ScopeCompiler.FrontEnd.SyntaxVisitor`1.Visit(T input, SyntaxNode e)\r\n   at ScopeCompiler.TreeVisitor`2.Visit(P input, IEnumerable`1 nodes)\r\n   at ScopeCompiler.FrontEnd.SyntaxVisitor`1.Visit(T input, SyntaxNode e)\r\n   at ScopeCompiler.FrontEnd.InputOutputPass.Process(Batch batch)\r\n   at ScopeCompiler.FrontEnd.CompilePassHelper.Run(Action pass, Compiler compiler, CompilerTimer timer, Boolean throwOnErrors)\r\n   at ScopeCompiler.FrontEnd.FrontEndRunner.Execute()\r\n   at ScopeCompiler.FrontEnd.CompilePipeline.DoExecutePipeline()\r\n   at ScopeCompiler.FrontEnd.CompilePipeline.DoCompile()","helpLink":"","filePath":null,"lineNumber":13,"startOffset":371,"endOffset":391}]}